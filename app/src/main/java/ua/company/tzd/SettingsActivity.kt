package ua.company.tzd

import android.content.SharedPreferences
import android.os.Bundle
import android.widget.*
import androidx.appcompat.app.AppCompatActivity
import androidx.appcompat.app.AlertDialog
import kotlinx.coroutines.*
import org.apache.commons.net.ftp.FTPClient

/**
 * –ï–∫—Ä–∞–Ω –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –ø—Ä–æ–≥—Ä–∞–º–∏.
 * –î–∞—î –∑–º–æ–≥—É –≤–∫–∞–∑–∞—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ —Ä–æ–∑–±–æ—Ä—É —à—Ç—Ä–∏—Ö–∫–æ–¥—É
 * —Ç–∞ —Ä–µ–∫–≤—ñ–∑–∏—Ç–∏ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ FTP-—Å–µ—Ä–≤–µ—Ä–∞.
 */
class SettingsActivity : AppCompatActivity() {

    /** SharedPreferences, –¥–µ –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è */
    private lateinit var prefs: SharedPreferences

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        // –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ —Ä–æ–∑–º—ñ—Ç–∫—É activity_settings.xml
        setContentView(R.layout.activity_settings)

        // –û—Ç—Ä–∏–º—É—î–º–æ —Å—Ö–æ–≤–∏—â–µ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –ø—ñ–¥ —ñ–º'—è–º "tzd_settings"
        prefs = getSharedPreferences("tzd_settings", MODE_PRIVATE)

        // –ü–æ–ª—è –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤ —à—Ç—Ä–∏—Ö–∫–æ–¥—É
        val codeStart = findViewById<EditText>(R.id.inputCodeStart)
        val codeLength = findViewById<EditText>(R.id.inputCodeLength)
        val weightKgStart = findViewById<EditText>(R.id.inputWeightKgStart)
        val weightKgLength = findViewById<EditText>(R.id.inputWeightKgLength)
        val weightGrStart = findViewById<EditText>(R.id.inputWeightGrStart)
        val weightGrLength = findViewById<EditText>(R.id.inputWeightGrLength)
        val countStart = findViewById<EditText>(R.id.inputCountStart)
        val countLength = findViewById<EditText>(R.id.inputCountLength)
        val delayMs = findViewById<EditText>(R.id.inputDelay)

        // –ü–æ–ª—è –¥–ª—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è FTP
        val ftpHost = findViewById<EditText>(R.id.inputFtpHost)
        val ftpPort = findViewById<EditText>(R.id.inputFtpPort)
        val ftpUser = findViewById<EditText>(R.id.inputFtpUser)
        val ftpPass = findViewById<EditText>(R.id.inputFtpPass)
        // –ù–æ–≤—ñ –ø–æ–ª—è –∑ –ø–∞–ø–∫–∞–º–∏ —ñ–º–ø–æ—Ä—Ç—É —Ç–∞ –µ–∫—Å–ø–æ—Ä—Ç—É –Ω–∞ FTP-—Å–µ—Ä–≤–µ—Ä—ñ
        val ftpImportDir = findViewById<EditText>(R.id.inputFtpImportDir)
        val ftpExportDir = findViewById<EditText>(R.id.inputFtpExportDir)

        val btnSave = findViewById<Button>(R.id.btnSaveSettings)
        val btnTestFtp = findViewById<Button>(R.id.btnTestFtp)

        // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∑–±–µ—Ä–µ–∂–µ–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è –∞–±–æ –ø—ñ–¥—Å—Ç–∞–≤–ª—è—î–º–æ —Ç–∏–ø–æ–≤—ñ
        codeStart.setText(prefs.getInt("codeStart", 0).toString())
        codeLength.setText(prefs.getInt("codeLength", 3).toString())
        weightKgStart.setText(prefs.getInt("weightKgStart", 3).toString())
        weightKgLength.setText(prefs.getInt("weightKgLength", 3).toString())
        weightGrStart.setText(prefs.getInt("weightGrStart", 6).toString())
        weightGrLength.setText(prefs.getInt("weightGrLength", 1).toString())
        countStart.setText(prefs.getInt("countStart", 7).toString())
        countLength.setText(prefs.getInt("countLength", 2).toString())
        delayMs.setText(prefs.getInt("delayMs", 2000).toString())

        ftpHost.setText(prefs.getString("ftpHost", ""))
        ftpPort.setText(prefs.getInt("ftpPort", 21).toString())
        ftpUser.setText(prefs.getString("ftpUser", ""))
        ftpPass.setText(prefs.getString("ftpPass", ""))

        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤–≤–µ–¥–µ–Ω—ñ –¥–∞–Ω—ñ —É SharedPreferences
        btnSave.setOnClickListener {
            prefs.edit().apply {
                putInt("codeStart", codeStart.text.toString().toInt())
                putInt("codeLength", codeLength.text.toString().toInt())
                putInt("weightKgStart", weightKgStart.text.toString().toInt())
                putInt("weightKgLength", weightKgLength.text.toString().toInt())
                putInt("weightGrStart", weightGrStart.text.toString().toInt())
                putInt("weightGrLength", weightGrLength.text.toString().toInt())
                putInt("countStart", countStart.text.toString().toInt())
                putInt("countLength", countLength.text.toString().toInt())
                putInt("delayMs", delayMs.text.toString().toInt())
                putString("ftpHost", ftpHost.text.toString())
                putInt("ftpPort", ftpPort.text.toString().toInt())
                putString("ftpUser", ftpUser.text.toString())
                putString("ftpPass", ftpPass.text.toString())
                apply()
            }
            Toast.makeText(this, "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–±–µ—Ä–µ–∂–µ–Ω–æ", Toast.LENGTH_SHORT).show()
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ FTP-—Å–µ—Ä–≤–µ—Ä–æ–º —Ç–∞ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –∫–∞—Ç–∞–ª–æ–≥—ñ–≤
        btnTestFtp.setOnClickListener {
            // –ó—á–∏—Ç—É—î–º–æ –¥–∞–Ω—ñ –∑ –ø–æ–ª—ñ–≤. –Ø–∫—â–æ –ø–æ—Ä—Ç –Ω–µ –≤–≤–µ–¥–µ–Ω–æ, –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—î–º–æ 21
            val host = ftpHost.text.toString().trim()
            val port = ftpPort.text.toString().toIntOrNull() ?: 21
            val user = ftpUser.text.toString().trim()
            val pass = ftpPass.text.toString().trim()
            val importDir = ftpImportDir.text.toString().trim()
            val exportDir = ftpExportDir.text.toString().trim()

            // –ó–∞–ø—É—Å–∫–∞—î–º–æ –∫–æ—Ä—É—Ç–∏–Ω—É –≤ IO-–ø–æ—Ç–æ—Ü—ñ –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –º–µ—Ä–µ–∂–µ—é
            CoroutineScope(Dispatchers.IO).launch {
                val ftpClient = FTPClient()
                try {
                    // –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ FTP-—Å–µ—Ä–≤–µ—Ä–∞
                    ftpClient.connect(host, port)
                    // –°–ø—Ä–æ–±–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
                    val success = ftpClient.login(user, pass)

                    if (success) {
                        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —ñ—Å–Ω—É–≤–∞–Ω–Ω—è –≤–∫–∞–∑–∞–Ω–∏—Ö –∫–∞—Ç–∞–ª–æ–≥—ñ–≤
                        val importExists = ftpClient.changeWorkingDirectory(importDir)
                        val exportExists = ftpClient.changeWorkingDirectory(exportDir)

                        // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ—Å—è –Ω–∞ –≥–æ–ª–æ–≤–Ω–∏–π –ø–æ—Ç—ñ–∫ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
                        runOnUiThread {
                            // –§–æ—Ä–º—É—î–º–æ –¥–æ–∫–ª–∞–¥–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
                            val statusMessage = StringBuilder()
                                .append("‚úÖ –ó'—î–¥–Ω–∞–Ω–Ω—è —É—Å–ø—ñ—à–Ω–µ\n\n")
                                .apply {
                                    if (importExists) {
                                        append("üìÇ –ü–∞–ø–∫–∞ —ñ–º–ø–æ—Ä—Ç—É —ñ—Å–Ω—É—î\n")
                                    } else {
                                        append("‚ùå –ü–∞–ø–∫—É —ñ–º–ø–æ—Ä—Ç—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ\n")
                                    }

                                    if (exportExists) {
                                        append("üìÇ –ü–∞–ø–∫–∞ –µ–∫—Å–ø–æ—Ä—Ç—É —ñ—Å–Ω—É—î\n")
                                    } else {
                                        append("‚ùå –ü–∞–ø–∫—É –µ–∫—Å–ø–æ—Ä—Ç—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ\n")
                                    }
                                }

                            // –ü–æ–∫–∞–∑—É—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —É —Å–ø–ª–∏–≤–∞—é—á–æ–º—É –¥—ñ–∞–ª–æ–≥–æ–≤–æ–º—É –≤—ñ–∫–Ω—ñ
                            AlertDialog.Builder(this@SettingsActivity)
                                .setTitle("–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ FTP")
                                .setMessage(statusMessage.toString())
                                .setPositiveButton("–û–ö", null)
                                .show()
                        }
                    } else {
                        // –õ–æ–≥—ñ–Ω –∞–±–æ –ø–∞—Ä–æ–ª—å –Ω–µ–≤—ñ—Ä–Ω—ñ
                        runOnUiThread {
                            Toast.makeText(this@SettingsActivity, "‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π –ª–æ–≥—ñ–Ω –∞–±–æ –ø–∞—Ä–æ–ª—å", Toast.LENGTH_LONG).show()
                        }
                    }

                    ftpClient.logout()
                    ftpClient.disconnect()

                } catch (e: Exception) {
                    // –í–∏–ø–∞–¥–æ–∫, –∫–æ–ª–∏ –Ω–µ –≤–¥–∞–ª–æ—Å—è –∑'—î–¥–Ω–∞—Ç–∏—Å—è –∞–±–æ –≤–∏–Ω–∏–∫–ª–∞ —ñ–Ω—à–∞ –ø–æ–º–∏–ª–∫–∞
                    e.printStackTrace()
                    runOnUiThread {
                        Toast.makeText(this@SettingsActivity, "‚ùå –ü–æ–º–∏–ª–∫–∞: " + e.message, Toast.LENGTH_LONG).show()
                    }
                }
            }
        }
    }
}
